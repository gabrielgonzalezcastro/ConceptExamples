<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=169433
  -->
<configuration>
  <configSections>
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
  </configSections>
  <connectionStrings>
    <add name="main" connectionString="Data Source=.\sqlexpress;Initial Catalog=ZipCodeData;Integrated Security=True" providerName="System.Data.SqlClient" />
  </connectionStrings>
  <system.web>
    <compilation debug="true" targetFramework="4.5" />
    <httpRuntime targetFramework="4.5" />
  </system.web>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework" />
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>

  <system.serviceModel>
    <services>
      <service name="GeoLib.Services.GeoManager" >
        <!--The address of the service is whatever the url deployment gonna be-->
        <endpoint address=""
                  contract="GeoLib.Contracts.IGeoService"
                  binding="netTcpBinding" />
      </service>
    </services>

    <!--As I do not have a .svc file I need to create one virtually and with ServiceHostingEnvironment
    I can do it-->
  
    <serviceHostingEnvironment>
      <serviceActivations>
        <add service="GeoLib.Services.GeoManager"
             relativeAddress="GeoService.svc"
             factory="GeoLib.WebHost.CustomHostFactory"/>
      </serviceActivations>
    </serviceHostingEnvironment>
    
  </system.serviceModel>
  
</configuration>